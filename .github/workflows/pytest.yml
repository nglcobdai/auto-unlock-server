name: pytest

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, ready_for_review]

permissions:
  contents: read

jobs:
  pytest:
    runs-on: ubuntu-latest
    environment:
      name: development

    steps:
      - uses: actions/checkout@v3
      - name: create .env file
        run: |
          touch .env.test
          echo "APP_NAME=${{ vars.APP_NAME }}" > .env
          echo "API_VERSION=${{ vars.API_VERSION }}" >> .env
          echo "SWITCH_BOT_TOKEN=${{ secrets.SWITCH_BOT_TOKEN }}" >> .env
          echo "SWITCH_BOT_SECRET=${{ secrets.SWITCH_BOT_SECRET }}" >> .env
          echo "UNLOCK_BOT_ID=${{ secrets.UNLOCK_BOT_ID }}" >> .env
          echo "MONGODB_HOST_NAME=${{ vars.MONGODB_HOST_NAME }}" >> .env
          echo "MONGODB_PORT=${{ vars.MONGODB_PORT }}" >> .env
          echo "MONGODB_ROOT_USER_NAME=${{ vars.MONGODB_ROOT_USER_NAME }}" >> .env
          echo "MONGODB_ROOT_USER_PWD=${{ secrets.MONGODB_ROOT_USER_PWD }}" >> .env
          echo "MONGODB_DATABASE=${{ vars.MONGODB_DATABASE }}" >> .env
          echo "MONGODB_USER_NAME=${{ vars.MONGODB_USER_NAME }}" >> .env
          echo "MONGODB_USER_PWD=${{ secrets.MONGODB_USER_PWD }}" >> .env
          echo "DATADRIVE=${{ vars.DATADRIVE }}" >> .env

      - name: Make the db directory
        run: |
          mkdir -p ${{ vars.DATADRIVE }}/db

      - name: Build the container
        run: |
          docker-compose -f docker-compose.test.yml build --env-file .env.test --no-cache
          docker-compose -f docker-compose.test.yml --env-file .env.test up -d
          docker ps

      - name: Test with pytest
        run: |
          docker exec auto-unlock-server_test_1 pytest -v
          docker-compose down
